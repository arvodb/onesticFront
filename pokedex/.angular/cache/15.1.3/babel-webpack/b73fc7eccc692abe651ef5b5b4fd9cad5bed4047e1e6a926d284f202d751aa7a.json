{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrlList = 'https://pokeapi.co/api/v2/pokemon/';\n    this.apiPokemonSpecies = 'https://pokeapi.co/api/v2/pokemon-species/';\n    this.apiRegion = 'https://pokeapi.co/api/v2/version-group/'; //pokedexes[0].name\n    this.apiPokedex = 'https://pokeapi.co/api/v2/pokemon-species/';\n  }\n  getPokemonList() {\n    return this.http.get(this.apiUrlList);\n  }\n  getPagination(offset, limit) {\n    const pagination = this.apiUrlList + '?offset=' + offset.toString() + '&limit=' + limit.toString();\n    return this.http.get(pagination);\n  }\n  getInfoOnePokemon(url = '', id = 0, hasId = false) {\n    return hasId ? this.http.get(this.apiUrlList + id) : this.http.get(url);\n  }\n  //public getInfoOnePokemonSpecies(id : number) : Observable\n  getRegion(id) {\n    return this.http.get(this.apiRegion + id);\n  }\n  getPokedex(id) {\n    return this.http.get(this.apiPokedex + id);\n  }\n  getEvolution(url) {\n    return this.http.get(url);\n  }\n  getDetailedInfo(id) {\n    return [this.getPokedex(id), this.getRegion(id)];\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAcA,OAAM,MAAOA,WAAW;EAEtBC,YAAmBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAEhB,eAAU,GAAG,oCAAoC;IACjD,sBAAiB,GAAG,4CAA4C;IAChE,cAAS,GAAG,0CAA0C;IACtD,eAAU,GAAG,4CAA4C;EALzB;EAOhCC,cAAc;IACnB,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAO,IAAI,CAACC,UAAU,CAAC;EAC7C;EACOC,aAAa,CAACC,MAAe,EAAGC,KAAc;IACnD,MAAMC,UAAU,GAAG,IAAI,CAACJ,UAAU,GAAE,UAAU,GAACE,MAAM,CAACG,QAAQ,EAAE,GAAG,SAAS,GAAGF,KAAK,CAACE,QAAQ,EAAE;IAC/F,OAAO,IAAI,CAACR,IAAI,CAACE,GAAG,CAAOK,UAAU,CAAC;EACxC;EACOE,iBAAiB,CAACC,MAAe,EAAE,EAACC,KAA8B,CAAC,EAAEC,QAAgB,KAAK;IAC/F,OAAQA,KAAK,GAAI,IAAI,CAACZ,IAAI,CAACE,GAAG,CAAU,IAAI,CAACC,UAAU,GAACQ,EAAE,CAAC,GAAG,IAAI,CAACX,IAAI,CAACE,GAAG,CAAUQ,GAAG,CAAC;EAC3F;EACA;EACOG,SAAS,CAACF,EAAW;IAC1B,OAAO,IAAI,CAACX,IAAI,CAACE,GAAG,CAAuB,IAAI,CAACY,SAAS,GAACH,EAAE,CAAC;EAC/D;EACOI,UAAU,CAACJ,EAAW;IAE3B,OAAO,IAAI,CAACX,IAAI,CAACE,GAAG,CAAU,IAAI,CAACc,UAAU,GAAGL,EAAE,CAAC;EACrD;EACOM,YAAY,CAACP,GAAW;IAE7B,OAAO,IAAI,CAACV,IAAI,CAACE,GAAG,CAAiBQ,GAAG,CAAC;EAC3C;EACOQ,eAAe,CAACP,EAAW;IAEhC,OAAO,CAAC,IAAI,CAACI,UAAU,CAACJ,EAAE,CAAC,EAAC,IAAI,CAACE,SAAS,CAACF,EAAE,CAAC,CAAC;EACjD;;AAlCWb,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAqB,SAAXrB,WAAW;EAAAsB,YAFV;AAAM","names":["DataService","constructor","http","getPokemonList","get","apiUrlList","getPagination","offset","limit","pagination","toString","getInfoOnePokemon","url","id","hasId","getRegion","apiRegion","getPokedex","apiPokedex","getEvolution","getDetailedInfo","factory","providedIn"],"sourceRoot":"","sources":["E:\\Arvo\\Documents\\DAWRepo\\onestic\\onesticFront\\pokedex\\src\\app\\services\\data.service.ts"],"sourcesContent":["import { Injectable, Version } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { List } from '../interface/list';\r\nimport { Pokemon } from '../interface/pokemon';\r\nimport { PokedexVersionGroups } from '../interface/pokemonVersionGroup';\r\nimport { DetailPokemonInterface } from '../interface/listPokemonInterface';\r\nimport { Pokedex } from '../interface/pokemonSpecies';\r\nimport { EvolutionChain } from '../interface/evolutionChain'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  constructor(public http: HttpClient) { }\r\n\r\n  public apiUrlList = 'https://pokeapi.co/api/v2/pokemon/';\r\n  public apiPokemonSpecies = 'https://pokeapi.co/api/v2/pokemon-species/';\r\n  public apiRegion = 'https://pokeapi.co/api/v2/version-group/'//pokedexes[0].name\r\n  public apiPokedex = 'https://pokeapi.co/api/v2/pokemon-species/';\r\n\r\n  public getPokemonList(): Observable<List>{\r\n    return this.http.get<List>(this.apiUrlList);\r\n  }\r\n  public getPagination(offset : number , limit : number) : Observable<List>{\r\n    const pagination = this.apiUrlList +'?offset='+offset.toString() + '&limit=' + limit.toString();\r\n    return this.http.get<List>(pagination);\r\n  }\r\n  public getInfoOnePokemon(url : string = '',id : number | string | null = 0, hasId:boolean = false) : Observable<Pokemon>{\r\n    return (hasId) ? this.http.get<Pokemon>(this.apiUrlList+id) : this.http.get<Pokemon>(url);\r\n  }\r\n  //public getInfoOnePokemonSpecies(id : number) : Observable\r\n  public getRegion(id : number) : Observable<PokedexVersionGroups>{\r\n    return this.http.get<PokedexVersionGroups>(this.apiRegion+id);\r\n  }\r\n  public getPokedex(id : number) : Observable<Pokedex>\r\n  {\r\n    return this.http.get<Pokedex>(this.apiPokedex + id);\r\n  }\r\n  public getEvolution(url: string) : Observable<EvolutionChain>\r\n  {\r\n    return this.http.get<EvolutionChain>(url);\r\n  }\r\n  public getDetailedInfo(id : number) : Observable<any>[]\r\n  {\r\n    return [this.getPokedex(id),this.getRegion(id)]\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}